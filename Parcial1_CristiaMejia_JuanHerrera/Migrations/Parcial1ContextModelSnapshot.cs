// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parcial1_CristiaMejia_JuanHerrera.Models;

#nullable disable

namespace Parcial1_CristiaMejia_JuanHerrera.Migrations
{
    [DbContext(typeof(Parcial1Context))]
    partial class Parcial1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.AgenciaDTO", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgencia"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAgencia");

                    b.ToTable("Agencia", (string)null);
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.ClienteDTO", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCliente");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.TipoViviendaDTO", b =>
                {
                    b.Property<int>("IdTipoVivienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoVivienda"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTipoVivienda");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("TipoVivienda", (string)null);
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.VentaDTO", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("date");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdVivienda")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVivienda");

                    b.ToTable("Venta", (string)null);
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.ViviendaDTO", b =>
                {
                    b.Property<int>("IdVivienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVivienda"));

                    b.Property<string>("Accesorios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVivienda")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroBanos")
                        .HasColumnType("int");

                    b.Property<int>("NumeroCuartos")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPisos")
                        .HasColumnType("int");

                    b.Property<int>("TamanoM2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("IdVivienda");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdTipoVivienda");

                    b.ToTable("Vivienda", (string)null);
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.VentaDTO", b =>
                {
                    b.HasOne("Parcial1_CristiaMejia_JuanHerrera.Models.AgenciaDTO", "Agencia")
                        .WithMany()
                        .HasForeignKey("IdAgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcial1_CristiaMejia_JuanHerrera.Models.ClienteDTO", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcial1_CristiaMejia_JuanHerrera.Models.ViviendaDTO", "Vivienda")
                        .WithMany()
                        .HasForeignKey("IdVivienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("Cliente");

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("Parcial1_CristiaMejia_JuanHerrera.Models.ViviendaDTO", b =>
                {
                    b.HasOne("Parcial1_CristiaMejia_JuanHerrera.Models.AgenciaDTO", "Agencia")
                        .WithMany()
                        .HasForeignKey("IdAgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcial1_CristiaMejia_JuanHerrera.Models.TipoViviendaDTO", "TipoVivienda")
                        .WithMany()
                        .HasForeignKey("IdTipoVivienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("TipoVivienda");
                });
#pragma warning restore 612, 618
        }
    }
}
